# Universal PowerShell Script to Install macOS on Hyper-V
# Supports AMD/Intel CPUs, detects system specs, configures environment, builds EFI
# Designed for use with Qonfused/OSX-Hyper-V

# --- Section 1: System Checks and Hyper-V Activation ---
function Check-HyperV {
    Write-Host "[1/6] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Hyper-V..." -ForegroundColor Cyan
    try {
        $logPath = "C:\\macos_setup_log.txt"
        "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ Hyper-V === $(Get-Date)" | Out-File $logPath -Append

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Windows
        $osSKU = (Get-CimInstance Win32_OperatingSystem).OperatingSystemSKU
        if ($osSKU -in 100,101,121) {
            Write-Warning "‚ö†Ô∏è –í–∞—à–∞ –≤–µ—Ä—Å–∏—è Windows (Home) –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Hyper-V"
            "Windows SKU –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è" | Out-File $logPath -Append
            return $false
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ BIOS Virtualization
        $sysInfo = systeminfo
        if ($sysInfo -notmatch "Virtualization Enabled In Firmware:\\s*Yes" -or
            $sysInfo -notmatch "Second Level Address Translation:\\s*Yes") {
            Write-Warning "‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–ª–∏ SLAT –Ω–µ –≤–∫–ª—é—á–µ–Ω—ã –≤ BIOS"
            "BIOS virtualization OFF" | Out-File $logPath -Append
            return $false
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ Hyper-V
        $hvFeature = Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -ErrorAction SilentlyContinue
        if ($null -eq $hvFeature) {
            Write-Warning "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ Hyper-V."
            "Hyper-V feature info missing" | Out-File $logPath -Append
            return $false
        }

        if ($hvFeature.State -ne "Enabled") {
            Write-Host "üîß –í–∫–ª—é—á–∞–µ–º Hyper-V..." -ForegroundColor Yellow
            Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart | Out-Null
            Write-Host "‚úÖ Hyper-V –≤–∫–ª—é—á–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ü–ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
            "Hyper-V enabled, reboot required" | Out-File $logPath -Append
            return $false
        }

        Write-Host "‚úÖ Hyper-V –≤–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤." -ForegroundColor Green
        "Hyper-V OK" | Out-File $logPath -Append
        return $true
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Hyper-V: $($_.Exception.Message)"
        $_.Exception | Out-File $logPath -Append
        return $false
    }
}


# --- Section 2: System Info Detection ---
function Get-SystemSpecs {
    $cpu = Get-CimInstance Win32_Processor
    $ram = [math]::Round((Get-CimInstance Win32_ComputerSystem).TotalPhysicalMemory / 1GB)
    $gpu = Get-CimInstance Win32_VideoController | Select-Object -ExpandProperty Name
    return @{ CPU = $cpu.Name; Cores = $cpu.NumberOfLogicalProcessors; RAM = $ram; GPU = $gpu }
}

# --- Section 3: macOS Version Selection ---
function Select-macOSVersion($cpuName, $ram, $gpuList) {
    $versions = @("10.15","11","12","13","14")
    if ($cpuName -match "AMD") {
        $versions = @("10.15","11","12")
    }
    if ($gpuList -match "NVIDIA") {
        $versions = @("10.15")
    }
    Write-Host "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é macOS –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö:"
    for ($i = 0; $i -lt $versions.Count; $i++) {
        Write-Host "  [$i] macOS ${versions[$i]}"
    }
    $choice = Read-Host "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏"
    return $versions[$choice]
}

# --- Section 4: Prerequisites Installation ---
function Install-Tools {
    Write-Host "[2/6] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Git/Python..."
    if (-not (Get-Command git -ErrorAction SilentlyContinue)) {
        Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Git..."
        winget install --id Git.Git -e --source winget
    }
    if (-not (Get-Command python -ErrorAction SilentlyContinue)) {
        Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python..."
        winget install --id Python.Python.3.11 -e --source winget
    }
}

# --- Section 5: Build EFI for VM ---
function Build-OpenCore($cpuName, $coreCount) {
    Write-Host "[3/6] –°–±–æ—Ä–∫–∞ OpenCore EFI..."
    if (-not (Test-Path "OSX-Hyper-V")) {
        git clone https://github.com/Qonfused/OSX-Hyper-V
    }
    Set-Location "OSX-Hyper-V"
    if ($cpuName -match "AMD") {
        Write-Host "–û–±–Ω–∞—Ä—É–∂–µ–Ω AMD: –ø—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á–∏..."
        .\scripts\amd.ps1 --cpu $coreCount
    }
    .\scripts\build.ps1
    Set-Location ".."
}

# --- Section 6: Create Hyper-V VM ---
function Create-VM($ver, $cores, $ram, $disk) {
    Write-Host "[4/6] –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã macOS $ver..."
    $vmName = "macOS_$ver"
    $dist = "OSX-Hyper-V/dist/Scripts"
    & "$dist/create-virtual-machine.ps1" -Name $vmName -Version $ver -CPU $cores -RAM $ram -Size $disk
    Write-Host "[5/6] –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞: $vmName"
}

# --- Section 7: Master Control ---
Check-HyperV
$specs = Get-SystemSpecs
Install-Tools
$macVersion = Select-macOSVersion $specs.CPU $specs.RAM $specs.GPU
Build-OpenCore $specs.CPU $specs.Cores
Create-VM $macVersion $specs.Cores $specs.RAM 64
Write-Host "[6/6] –ì–æ—Ç–æ–≤–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É —á–µ—Ä–µ–∑ Hyper-V Manager."
